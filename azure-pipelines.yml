pool:
  vmImage: 'ubuntu-22.04'

variables:
  - group: PGP
  - group: MavenCentral
  # Common variables and constants
  ### Pipeline-related
  - name: isMainBranch
    value: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]
  - name: isReleaseBranch
    value: $[startsWith(variables['Build.SourceBranch'], 'refs/heads/release/')]
  - name: isPullRequest
    value: $[startsWith(variables['Build.SourceBranch'], 'refs/pull/')]
    
  ### Build-related
  - name: MAVEN_CACHE_FOLDER
    value: $(Pipeline.Workspace)/.m2/repository
  - name: MAVEN_OPTS
    value: -Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)
  - name: JDK_VERSION
    value: '11'
  # Project-specific variables
  - name: projectName
    value: $(Build.DefinitionName)
  - name: GIT_VERSION_CONFIGURATION
    value: ci/GitVersion.yml

stages:
  # Prepare Semantic Versioning
  - stage: StageVersion
    displayName: 'Semantic Version'
    jobs:
      - template: ci/semver.yml
        parameters:
          gitVersionConfigurationFile: $(GIT_VERSION_CONFIGURATION)

  - stage: Build
    displayName: Build
    dependsOn: StageVersion
    jobs:
      - job: Build
        displayName: Build Project
        steps:
          # Get target build version
          - template: ci/read-semver-files-steps.yml
          - task: DownloadSecureFile@1
            name: pgpPrivateKey
            displayName: 'Download PGP Private Key'
            inputs:
              secureFile: 'prolutions.priv.pgp'
            condition: and(succeeded(), eq(variables.isReleaseBranch, true))
          - template: ci/maven-build-steps.yml
            parameters:
              projectName: $(projectName)
              projectVersion: $(version)
              isRelease: $(isReleaseBranch)
              isPullRequest: $(isPullRequest)

  # Tag only on release branch
  - stage: StageTag
    displayName: 'Create Tag on Git Repository'
    dependsOn: Build
    condition: and(succeeded(), eq(variables.isReleaseBranch, true))
    jobs:
      - job: TagGitRepo
        steps:
          # Get tag based on Semantic Versioning
          - template: ci/read-semver-files-steps.yml
          # Tag Git repository
          - template: ci/git-tag-steps.yml
            parameters:
              tag: $(tagName)

  - stage: deploy_maven_central_staging
    displayName: Deploy to maven central staging repository
    dependsOn: StageTag
    condition: and(succeeded(), eq(variables.isReleaseBranch, True))
    jobs:
      - job: prepare_deploy
        displayName: Prepare bundle and deploy
        steps:
          - template: ci/read-semver-files-steps.yml
          - task: DownloadPackage@1
            inputs:
              packageType: 'maven'
              feed: 'c80e28a2-572f-48ba-a715-f7fca8864286/7fde40f3-107c-49e6-990a-60547712b18e'
              definition: 'org.herasaf.xacml.core:herasaf-xacml-core'
              version: $(version)
              view: 'local'
              extract: true
              downloadPath: '$(System.ArtifactsDirectory)'
          - bash: |
              ls -al $(System.ArtifactsDirectory)
              rm $(System.ArtifactsDirectory)/*.asc.*
              rm $(System.ArtifactsDirectory)/*.sha*
              rm $(System.ArtifactsDirectory)/*.md5

              cd $(System.ArtifactsDirectory) && jar -cvf bundle.jar herasaf-xacml-core-$(version)* && cd -
              httpResponse=$(curl -w "%{http_code}" -v -H "Authorization: Basic $(prolutions_basic_auth_user_token)" -X POST -F file=@$(System.ArtifactsDirectory)/bundle.jar https://oss.sonatype.org/service/local/staging/bundle_upload -o output.log)
              echo "maven central response: "
              echo "$(cat output.log)"

              if [ "$httpResponse" == "201" ]; then
                echo "deploy to maven central staging reposiory successful: $httpResponse"
              else
                echo "deploy to maven central staging reposiory failed: $httpResponse"
                exit 1
              fi
            displayName: Bundle and deploy
